{"version":3,"sources":["swarm-numberformat.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","validate","condition","message","Error","_format","val","opts","backend","backends","index","suffix","suffixFn","Math","abs","minSuffix","minRound","floor","toLocaleString","undefined","maximumSignificantDigits","sigfigs","toExponential","replace","prefix","Object","defineProperty","value","formatShort","formatFull","format","Formatter","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_standardSuffixes","_standardSuffixes2","_longScaleSuffixes","_longScaleSuffixes2","native","max","log10","pow","toPrecision","decimal.js","logarithm","dividedBy","toNumber","div","constructor","defaultOptions","flavor","suffixGroup","suffixes","suffixGroups","Formats","standard","longScale","scientific","full","short","hybrid","slice","engineering","Flavors","formats","flavors","_this","arguments","keys","_normalizeOpts","charAt","toUpperCase","substr","formatFlavor","assign","formatOptions","flavorOptions","numberformat"],"mappings":"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MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEDD,MACC,GACA,YACA,WACA,WACA,YACA,eACA,eACA,cACA,cACA,aACA,aACA,aACA,eACA,gBACA,gBACA,qBACA,oBACA,eACA,mBACA,iBACA,kBACA,gBACA,kBACA,mBACA,oBACA,wBACA,uBACA,mBACA,sBACA,oBACA,qBACA,iBACA,mBACA,oBACA,qBACA,yBACA,wBACA,oBACA,uBACA,qBACA,sBACA,oBACA,sBACA,uBACA,wBACA,4BACA,2BACA,uBACA,0BACA,wBACA,yBACA,qBACA,uBACA,wBACA,yBACA,6BACA,4BACA,wBACA,2BACA,yBACA,0BACA,kBACA,oBACA,qBACA,qBACA,0BACA,yBACA,oBACA,wBACA,sBACA,uBACA,oBACA,sBACA,uBACA,uBACA,4BACA,2BACA,sBACA,0BACA,wBACA,yBACA,kBACA,oBACA,wBAMG,SAAS3F,EAAQD,GAEtBC,EAAOD,SACN6F,SACAD,MACC,GACA,YACA,WACA,YACA,WACA,YACA,YACA,aACA,eACA,gBACA,eACA,gBACA,cACA,eACA,cACA,eACA,aACA,cACA,aACA,cACA,aACA,cACA,eACA,gBACA,gBACA,iBACA,gBACA,iBACA,qBACA,sBACA,oBACA,qBACA,eACA,gBACA,mBACA,oBACA,iBACA,kBACA,kBACA,mBACA,gBACA,iBACA,kBACA,mBACA,mBACA,oBACA,oBACA,qBACA,wBACA,yBACA,uBACA,wBACA,mBACA,oBACA,sBACA,uBACA,oBACA,qBACA,qBACA,sBACA,iBACA,kBACA,mBACA,oBACA,oBACA,qBACA,qBACA,sBACA,yBACA,0BACA,wBACA,yBACA,oBACA,qBACA,uBACA,wBACA,qBACA,sBACA,sBACA,uBACA,oBACA,qBACA,sBACA","file":"swarm-numberformat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"numberformat\"] = factory();\n\telse\n\t\troot[\"numberformat\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.formatShort = exports.formatFull = exports.format = exports.Formatter = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Can't comment a .json file, but the suffixes come from these pages:\n\t// http://home.kpn.nl/vanadovv/BignumbyN.html\n\t\n\t\n\tvar _standardSuffixes = __webpack_require__(1);\n\t\n\tvar _standardSuffixes2 = _interopRequireDefault(_standardSuffixes);\n\t\n\tvar _longScaleSuffixes = __webpack_require__(2);\n\t\n\tvar _longScaleSuffixes2 = _interopRequireDefault(_longScaleSuffixes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// TODO: use this page to generate names dynamically, for even larger numbers:\n\t//   http://mathforum.org/library/drmath/view/59154.html\n\t// TODO: rounding control\n\t\n\tfunction validate(condition, message) {\n\t  if (!condition) {\n\t    throw new Error(message);\n\t  }\n\t  return condition;\n\t}\n\t\n\tvar backends = {\n\t  'native': {\n\t    // Suffixes are a list - which index of the list do we want? \n\t    // _index(999) === 0\n\t    // _index(1000) === 1\n\t    // _index(1000000) === 2\n\t    index: function index(val) {\n\t      // string length is faster but fails for length >= 20, where JS starts\n\t      // formatting with e\n\t      return Math.max(0, Math.floor(Math.log10(Math.abs(val)) / 3));\n\t    },\n\t    prefix: function prefix(val, sigfigs, index) {\n\t      return (val / Math.pow(1000, index)).toPrecision(sigfigs);\n\t    }\n\t  },\n\t  'decimal.js': {\n\t    // Note that decimal.js is never imported by this library!\n\t    // We're using its methods passed in by the caller. This keeps the library\n\t    // much smaller for the common case: no decimal.js.\n\t    // api docs: https://mikemcl.github.io/decimal.js/\n\t    index: function index(val) {\n\t      // we assume the *exponent* is small enough to be a native js number\n\t      return Math.max(0, val.abs().logarithm(10).dividedBy(3).floor().toNumber());\n\t    },\n\t    prefix: function prefix(val, sigfigs, index) {\n\t      var div = new val.constructor(1000).pow(index);\n\t      return val.dividedBy(div).toPrecision(sigfigs);\n\t    }\n\t  }\n\t};\n\t\n\t// The formatting function.\n\tfunction _format(val, opts) {\n\t  var backend = validate(backends[opts.backend], 'not a backend: ' + opts.backend);\n\t  var index = backend.index(val);\n\t  var suffix = opts.suffixFn(index);\n\t  // opts.minSuffix: Use JS native formatting for smallish numbers, because\n\t  // '99,999' is prettier than '99.9k'\n\t  // it's safe to let Math coerce Decimal.js to infinity here, gt/lt still work\n\t  if (Math.abs(val) < opts.minSuffix) {\n\t    // decimal.js minSuffix/minRound aren't supported, we must be native to get here\n\t    if (Math.abs(val) >= opts.minRound) {\n\t      val = Math.floor(val);\n\t    }\n\t    return val.toLocaleString(undefined, { maximumSignificantDigits: opts.sigfigs });\n\t  }\n\t  // No suffix found: use scientific notation. JS's native toExponential is fine.\n\t  if (!suffix && suffix !== '') {\n\t    return val.toExponential(opts.sigfigs - 1).replace('e+', 'e');\n\t  }\n\t  // Found a suffix. Calculate the prefix, the number before the suffix.\n\t  var prefix = backend.prefix(val, opts.sigfigs, index);\n\t  return '' + prefix + suffix;\n\t}\n\t\n\tvar defaultOptions = {\n\t  backend: 'native',\n\t  flavor: 'full',\n\t  suffixGroup: 'full',\n\t  suffixFn: function suffixFn(index) {\n\t    var suffixes = this.suffixes || this.suffixGroups[this.suffixGroup];\n\t    validate(suffixes, 'no such suffixgroup: ' + this.suffixGroup);\n\t    if (index < suffixes.length) {\n\t      return suffixes[index] || '';\n\t    }\n\t    // return undefined\n\t  },\n\t\n\t  // minimum value to use any suffix, because '99,900' is prettier than '99.9k'\n\t  minSuffix: 1e5,\n\t  // Show decimals below this value rounded to opts.sigfigs, instead of floor()ed\n\t  minRound: 0,\n\t  sigfigs: 3, // often overridden by flavor\n\t  format: 'standard'\n\t};\n\t// User-visible format choices, like on swarmsim's options screen. \n\t// Each has a different set of options.\n\tvar Formats = {\n\t  standard: { suffixGroups: _standardSuffixes2.default },\n\t  // like standard formatting, with a different set of suffixes\n\t  longScale: { suffixGroups: _longScaleSuffixes2.default },\n\t  // like standard formatting, with no suffixes at all\n\t  scientific: { suffixGroups: { full: [], short: [] } },\n\t  // like standard formatting, with a smaller set of suffixes\n\t  hybrid: {\n\t    suffixGroups: {\n\t      full: _standardSuffixes2.default.full.slice(0, 12),\n\t      short: _standardSuffixes2.default.short.slice(0, 12)\n\t    }\n\t  },\n\t  // like standard formatting, with a different/infinite set of suffixes\n\t  engineering: { suffixFn: function suffixFn(index) {\n\t      return index === 0 ? '' : 'E' + index * 3;\n\t    } }\n\t};\n\t// A convenient way for the developer to modify formatters.\n\t// These are different from formats - not user-visible.\n\tvar Flavors = {\n\t  full: { suffixGroup: 'full', sigfigs: 5 },\n\t  short: { suffixGroup: 'short', sigfigs: 3 }\n\t};\n\t// Allow callers to extend formats and flavors.\n\tdefaultOptions.formats = Formats;\n\tdefaultOptions.flavors = Flavors;\n\t\n\tvar Formatter = exports.Formatter = function () {\n\t  /**\n\t   * @param {Object} opts All formatter configuration.\n\t   * @param {string} [opts.flavor='full'] 'full' or 'short'. Flavors can modify any number of other options here. Full is the default; short has fewer sigfigs and shorter standard-suffixes.\n\t   * @param {Object} [opts.flavors] Specify your own custom flavors. \n\t   * @param {string} [opts.backend='native'] 'native' or 'decimal.js'.\n\t   * @param {string} [opts.suffixGroup]\n\t   * @param {Function} [opts.suffixFn]\n\t   * @param {number} [opts.minSuffix=1e5]\n\t   * @param {number} [opts.minRound=0]\n\t   * @param {number} [opts.sigfigs=5]\n\t   * @param {number} [opts.format='standard'] 'standard', 'hybrid', 'scientific', 'longScale'.\n\t   * @param {Object} [opts.formats] Specify your own custom formats.\n\t   */\n\t  function Formatter() {\n\t    var _this = this;\n\t\n\t    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Formatter);\n\t\n\t    /** @type Object */\n\t    this.opts = opts;\n\t    // create convenience methods for each flavor\n\t    var flavors = Object.keys(this._normalizeOpts().flavors);\n\t    // the fn(i) is for stupid binding tricks with the looped fn(val, opts)\n\t    for (var i = 0; i < flavors.length; i++) {\n\t      (function (i) {\n\t        var flavor = flavors[i];\n\t        // capitalize the first letter to camel-case method name, like formatShort\n\t        var key = 'format' + flavor.charAt(0).toUpperCase() + flavor.substr(1);\n\t        /** @ignore */\n\t        _this[key] = function (val, opts) {\n\t          return _this.formatFlavor(val, flavor, opts);\n\t        };\n\t      })(i);\n\t    }\n\t  }\n\t\n\t  _createClass(Formatter, [{\n\t    key: '_normalizeOpts',\n\t    value: function _normalizeOpts() {\n\t      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      // all the user-specified opts, no defaults\n\t      opts = Object.assign({}, this.opts, opts);\n\t      // opts.format redefines some other opts, but should never override the user's opts\n\t      var format = opts && opts.format;\n\t      var formats = opts && opts.formats || defaultOptions.formats;\n\t      var formatOptions = formats[format || defaultOptions.format];\n\t      validate(formatOptions, 'no such format: ' + format);\n\t      var flavor = opts && opts.flavor;\n\t      var flavors = opts && opts.flavors || defaultOptions.flavors;\n\t      var flavorOptions = flavors[flavor || defaultOptions.flavor];\n\t      validate(flavorOptions, 'no such flavor: ' + flavor);\n\t      // finally, add the implied options: defaults and format-derived\n\t      return Object.assign({}, defaultOptions, formatOptions, flavorOptions, opts);\n\t    }\n\t    /**\n\t     * @param {number} val\n\t     * @param {Object} [opts]\n\t     * @return {number} which suffix to use for this number in a list of suffixes. You can also think of this as \"how many commas are in the number?\"\n\t     */\n\t\n\t  }, {\n\t    key: 'index',\n\t    value: function index(val, opts) {\n\t      opts = this._normalizeOpts(opts);\n\t      return backends[opts.backend].index(val);\n\t    }\n\t    /**\n\t     * @param {number} val\n\t     * @param {Object} [opts]\n\t     * @return {string} The suffix that this number would use, with no number shown.\n\t     * @example\n\t     * new Formatter().suffix(1e6)\n\t     * // => \" million\"\n\t     * @example\n\t     * new Formatter().suffix(1e6, {flavor: \"short\"})\n\t     * // => \"M\"\n\t     */\n\t\n\t  }, {\n\t    key: 'suffix',\n\t    value: function suffix(val, opts) {\n\t      opts = this._normalizeOpts(opts);\n\t      var index = backends[opts.backend].index(val);\n\t      return opts.suffixFn(index);\n\t    }\n\t    /**\n\t     * Format a number.\n\t     * @param {number} val\n\t     * @param {Object} [opts] Override the options provided to the Formatter constructor.\n\t     * @return {string} The formatted number.\n\t     * @example\n\t     * new Formatter().format(1e6)\n\t     * // => \"1.0000 million\"\n\t     */\n\t\n\t  }, {\n\t    key: 'format',\n\t    value: function format(val, opts) {\n\t      opts = this._normalizeOpts(opts);\n\t      return _format(val, opts);\n\t    }\n\t    /**\n\t     * Format a number with a specified flavor. It's very common to call the formatter with different flavors, so it has its own shortcut.\n\t     *\n\t     * `Formatter.formatFull()` and `Formatter.formatShort()` are also available.\n\t     * @param {number} val\n\t     * @param {string} flavor 'short' or 'full'. See opts.flavor.\n\t     * @param {Object} [opts]\n\t     * @return {string[]} The complete list of formats available. Use this to build an options UI to allow your players to choose their favorite format.\n\t     */\n\t\n\t  }, {\n\t    key: 'formatFlavor',\n\t    value: function formatFlavor(val, flavor, opts) {\n\t      return this.format(val, Object.assign({}, opts, { flavor: flavor }));\n\t    }\n\t    /**\n\t     * @param {Object} [opts]\n\t     * @return {string[]} The complete list of formats available. Use this to build an options UI to allow your players to choose their favorite format.\n\t     */\n\t\n\t  }, {\n\t    key: 'listFormats',\n\t    value: function listFormats(opts) {\n\t      opts = this._normalizeOpts(opts);\n\t      return Object.keys(opts.formats);\n\t    }\n\t  }]);\n\t\n\t  return Formatter;\n\t}();\n\t\n\tvar numberformat = new Formatter();\n\tnumberformat.defaultOptions = defaultOptions;\n\tnumberformat.Formatter = Formatter;\n\texports.default = numberformat;\n\t\n\t/**\n\t * Format a number using the default options.\n\t * @param {number} val\n\t * @param {Object} [opts]\n\t * @return string\n\t * @example\n\t * format(1e6)\n\t * // => \"1.0000 million\"\n\t * @example\n\t * format(1e6, {sigfigs: 1})\n\t * // => \"1 million\"\n\t */\n\t\n\tvar format = exports.format = function format(val, opts) {\n\t  return numberformat.format(val, opts);\n\t};\n\t/**\n\t * Format a full-flavor number using the default options. Identical to `format()`\n\t * @param {number} val\n\t * @param {Object} [opts]\n\t * @return string\n\t * @example\n\t * format(1e6)\n\t * // => \"1.0000 million\"\n\t */\n\tvar formatFull = exports.formatFull = function formatFull(val, opts) {\n\t  return numberformat.formatFlavor(val, 'full', opts);\n\t};\n\t/**\n\t * Format a short-flavor number using the default options.\n\t * @param {number} val\n\t * @param {Object} [opts]\n\t * @return string\n\t * @example\n\t * format(1e6)\n\t * // => \"1.00M\"\n\t */\n\tvar formatShort = exports.formatShort = function formatShort(val, opts) {\n\t  return numberformat.formatFlavor(val, 'short', opts);\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"short\": [\n\t\t\t\"\",\n\t\t\t\"K\",\n\t\t\t\"M\",\n\t\t\t\"B\",\n\t\t\t\"T\",\n\t\t\t\"Qa\",\n\t\t\t\"Qi\",\n\t\t\t\"Sx\",\n\t\t\t\"Sp\",\n\t\t\t\"Oc\",\n\t\t\t\"No\",\n\t\t\t\"Dc\",\n\t\t\t\"UDc\",\n\t\t\t\"DDc\",\n\t\t\t\"TDc\",\n\t\t\t\"QaDc\",\n\t\t\t\"QiDc\",\n\t\t\t\"SxDc\",\n\t\t\t\"SpDc\",\n\t\t\t\"ODc\",\n\t\t\t\"NDc\",\n\t\t\t\"Vi\",\n\t\t\t\"UVi\",\n\t\t\t\"DVi\",\n\t\t\t\"TVi\",\n\t\t\t\"QaVi\",\n\t\t\t\"QiVi\",\n\t\t\t\"SxVi\",\n\t\t\t\"SpVi\",\n\t\t\t\"OVi\",\n\t\t\t\"NVi\",\n\t\t\t\"Tg\",\n\t\t\t\"UTg\",\n\t\t\t\"DTg\",\n\t\t\t\"TTg\",\n\t\t\t\"QaTg\",\n\t\t\t\"QiTg\",\n\t\t\t\"SxTg\",\n\t\t\t\"SpTg\",\n\t\t\t\"OTg\",\n\t\t\t\"NTg\",\n\t\t\t\"Qd\",\n\t\t\t\"UQd\",\n\t\t\t\"DQd\",\n\t\t\t\"TQd\",\n\t\t\t\"QaQd\",\n\t\t\t\"QiQd\",\n\t\t\t\"SxQd\",\n\t\t\t\"SpQd\",\n\t\t\t\"OQd\",\n\t\t\t\"NQd\",\n\t\t\t\"Qq\",\n\t\t\t\"UQq\",\n\t\t\t\"DQq\",\n\t\t\t\"TQq\",\n\t\t\t\"QaQq\",\n\t\t\t\"QiQq\",\n\t\t\t\"SxQq\",\n\t\t\t\"SpQq\",\n\t\t\t\"OQq\",\n\t\t\t\"NQq\",\n\t\t\t\"Sg\",\n\t\t\t\"USg\",\n\t\t\t\"DSg\",\n\t\t\t\"TSg\",\n\t\t\t\"QaSg\",\n\t\t\t\"QiSg\",\n\t\t\t\"SxSg\",\n\t\t\t\"SpSg\",\n\t\t\t\"OSg\",\n\t\t\t\"NSg\",\n\t\t\t\"St\",\n\t\t\t\"USt\",\n\t\t\t\"DSt\",\n\t\t\t\"TSt\",\n\t\t\t\"QaSt\",\n\t\t\t\"QiSt\",\n\t\t\t\"SxSt\",\n\t\t\t\"SpSt\",\n\t\t\t\"OSt\",\n\t\t\t\"NSt\",\n\t\t\t\"Og\",\n\t\t\t\"UOg\",\n\t\t\t\"DOg\",\n\t\t\t\"TOg\",\n\t\t\t\"QaOg\",\n\t\t\t\"QiOg\",\n\t\t\t\"SxOg\",\n\t\t\t\"SpOg\",\n\t\t\t\"OOg\",\n\t\t\t\"NOg\"\n\t\t],\n\t\t\"full\": [\n\t\t\t\"\",\n\t\t\t\" thousand\",\n\t\t\t\" million\",\n\t\t\t\" billion\",\n\t\t\t\" trillion\",\n\t\t\t\" quadrillion\",\n\t\t\t\" quintillion\",\n\t\t\t\" sextillion\",\n\t\t\t\" septillion\",\n\t\t\t\" octillion\",\n\t\t\t\" nonillion\",\n\t\t\t\" decillion\",\n\t\t\t\" undecillion\",\n\t\t\t\" duodecillion\",\n\t\t\t\" tredecillion\",\n\t\t\t\" quattuordecillion\",\n\t\t\t\" quinquadecillion\",\n\t\t\t\" sedecillion\",\n\t\t\t\" septendecillion\",\n\t\t\t\" octodecillion\",\n\t\t\t\" novendecillion\",\n\t\t\t\" vigintillion\",\n\t\t\t\" unvigintillion\",\n\t\t\t\" duovigintillion\",\n\t\t\t\" tresvigintillion\",\n\t\t\t\" quattuorvigintillion\",\n\t\t\t\" quinquavigintillion\",\n\t\t\t\" sesvigintillion\",\n\t\t\t\" septemvigintillion\",\n\t\t\t\" octovigintillion\",\n\t\t\t\" novemvigintillion\",\n\t\t\t\" trigintillion\",\n\t\t\t\" untrigintillion\",\n\t\t\t\" duotrigintillion\",\n\t\t\t\" trestrigintillion\",\n\t\t\t\" quattuortrigintillion\",\n\t\t\t\" quinquatrigintillion\",\n\t\t\t\" sestrigintillion\",\n\t\t\t\" septentrigintillion\",\n\t\t\t\" octotrigintillion\",\n\t\t\t\" noventrigintillion\",\n\t\t\t\" quadragintillion\",\n\t\t\t\" unquadragintillion\",\n\t\t\t\" duoquadragintillion\",\n\t\t\t\" tresquadragintillion\",\n\t\t\t\" quattuorquadragintillion\",\n\t\t\t\" quinquaquadragintillion\",\n\t\t\t\" sesquadragintillion\",\n\t\t\t\" septenquadragintillion\",\n\t\t\t\" octoquadragintillion\",\n\t\t\t\" novenquadragintillion\",\n\t\t\t\" quinquagintillion\",\n\t\t\t\" unquinquagintillion\",\n\t\t\t\" duoquinquagintillion\",\n\t\t\t\" tresquinquagintillion\",\n\t\t\t\" quattuorquinquagintillion\",\n\t\t\t\" quinquaquinquagintillion\",\n\t\t\t\" sesquinquagintillion\",\n\t\t\t\" septenquinquagintillion\",\n\t\t\t\" octoquinquagintillion\",\n\t\t\t\" novenquinquagintillion\",\n\t\t\t\" sexagintillion\",\n\t\t\t\" unsexagintillion\",\n\t\t\t\" duosexagintillion\",\n\t\t\t\" tresexagintillion\",\n\t\t\t\" quattuorsexagintillion\",\n\t\t\t\" quinquasexagintillion\",\n\t\t\t\" sesexagintillion\",\n\t\t\t\" septensexagintillion\",\n\t\t\t\" octosexagintillion\",\n\t\t\t\" novensexagintillion\",\n\t\t\t\" septuagintillion\",\n\t\t\t\" unseptuagintillion\",\n\t\t\t\" duoseptuagintillion\",\n\t\t\t\" treseptuagintillion\",\n\t\t\t\" quattuorseptuagintillion\",\n\t\t\t\" quinquaseptuagintillion\",\n\t\t\t\" seseptuagintillion\",\n\t\t\t\" septenseptuagintillion\",\n\t\t\t\" octoseptuagintillion\",\n\t\t\t\" novenseptuagintillion\",\n\t\t\t\" octogintillion\",\n\t\t\t\" unoctogintillion\",\n\t\t\t\" duooctogintillion\"\n\t\t]\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"short\": [],\n\t\t\"full\": [\n\t\t\t\"\",\n\t\t\t\" thousand\",\n\t\t\t\" million\",\n\t\t\t\" milliard\",\n\t\t\t\" billion\",\n\t\t\t\" billiard\",\n\t\t\t\" trillion\",\n\t\t\t\" trilliard\",\n\t\t\t\" quadrillion\",\n\t\t\t\" quadrilliard\",\n\t\t\t\" quintillion\",\n\t\t\t\" quintilliard\",\n\t\t\t\" sextillion\",\n\t\t\t\" sextilliard\",\n\t\t\t\" septillion\",\n\t\t\t\" septilliard\",\n\t\t\t\" octillion\",\n\t\t\t\" octilliard\",\n\t\t\t\" nonillion\",\n\t\t\t\" nonilliard\",\n\t\t\t\" decillion\",\n\t\t\t\" decilliard\",\n\t\t\t\" undecillion\",\n\t\t\t\" undecilliard\",\n\t\t\t\" duodecillion\",\n\t\t\t\" duodecilliard\",\n\t\t\t\" tredecillion\",\n\t\t\t\" tredecilliard\",\n\t\t\t\" quattuordecillion\",\n\t\t\t\" quattuordecilliard\",\n\t\t\t\" quinquadecillion\",\n\t\t\t\" quinquadecilliard\",\n\t\t\t\" sedecillion\",\n\t\t\t\" sedecilliard\",\n\t\t\t\" septendecillion\",\n\t\t\t\" septendecilliard\",\n\t\t\t\" octodecillion\",\n\t\t\t\" octodecilliard\",\n\t\t\t\" novendecillion\",\n\t\t\t\" novendecilliard\",\n\t\t\t\" vigintillion\",\n\t\t\t\" vigintilliard\",\n\t\t\t\" unvigintillion\",\n\t\t\t\" unvigintilliard\",\n\t\t\t\" duovigintillion\",\n\t\t\t\" duovigintilliard\",\n\t\t\t\" tresvigintillion\",\n\t\t\t\" tresvigintilliard\",\n\t\t\t\" quattuorvigintillion\",\n\t\t\t\" quattuorvigintilliard\",\n\t\t\t\" quinquavigintillion\",\n\t\t\t\" quinquavigintilliard\",\n\t\t\t\" sesvigintillion\",\n\t\t\t\" sesvigintilliard\",\n\t\t\t\" septemvigintillion\",\n\t\t\t\" septemvigintilliard\",\n\t\t\t\" octovigintillion\",\n\t\t\t\" octovigintilliard\",\n\t\t\t\" novemvigintillion\",\n\t\t\t\" novemvigintilliard\",\n\t\t\t\" trigintillion\",\n\t\t\t\" trigintilliard\",\n\t\t\t\" untrigintillion\",\n\t\t\t\" untrigintilliard\",\n\t\t\t\" duotrigintillion\",\n\t\t\t\" duotrigintilliard\",\n\t\t\t\" trestrigintillion\",\n\t\t\t\" trestrigintilliard\",\n\t\t\t\" quattuortrigintillion\",\n\t\t\t\" quattuortrigintilliard\",\n\t\t\t\" quinquatrigintillion\",\n\t\t\t\" quinquatrigintilliard\",\n\t\t\t\" sestrigintillion\",\n\t\t\t\" sestrigintilliard\",\n\t\t\t\" septentrigintillion\",\n\t\t\t\" septentrigintilliard\",\n\t\t\t\" octotrigintillion\",\n\t\t\t\" octotrigintilliard\",\n\t\t\t\" noventrigintillion\",\n\t\t\t\" noventrigintilliard\",\n\t\t\t\" quadragintillion\",\n\t\t\t\" quadragintilliard\",\n\t\t\t\" unquadragintillion\",\n\t\t\t\" unquadragintilliard\"\n\t\t]\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}