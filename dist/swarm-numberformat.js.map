{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f5a8285f5b5e7b10d6f7","webpack:///./src/main.js","webpack:///./src/standard-suffixes.json","webpack:///./src/long-scale-suffixes.json"],"names":["validate","condition","message","Error","backends","index","val","Math","max","floor","log10","abs","prefix","sigfigs","pow","toPrecision","logarithm","dividedBy","toNumber","div","constructor","_format","opts","backend","suffix","suffixFn","minSuffix","minRound","toLocaleString","undefined","maximumSignificantDigits","toExponential","replace","defaultOptions","flavor","suffixGroup","suffixes","suffixGroups","length","format","Formats","standard","longScale","scientific","full","short","hybrid","slice","engineering","Flavors","formats","flavors","Formatter","Object","keys","_normalizeOpts","i","key","charAt","toUpperCase","substr","formatFlavor","formatOptions","flavorOptions","numberformat","formatFull","formatShort"],"mappings":"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,KAAKiC,cAAL,CAAoBjC,IAApB,CAAP;AACA,cAAO+B,OAAOC,IAAP,CAAYhC,KAAK4B,OAAjB,CAAP;AACD;;;;;;AAGH,KAAMc,eAAe,IAAIZ,SAAJ,EAArB;AACAY,cAAa/B,cAAb,GAA8BA,cAA9B;AACA+B,cAAaZ,SAAb,GAAyBA,SAAzB;mBACeY,Y;;AAEf;;;;;;;;;;;;;AAYO,KAAMzB,0BAAS,SAATA,MAAS,CAACjC,GAAD,EAAMgB,IAAN;AAAA,UAAe0C,aAAazB,MAAb,CAAoBjC,GAApB,EAAyBgB,IAAzB,CAAf;AAAA,EAAf;AACP;;;;;;;;;AASO,KAAM2C,kCAAa,SAAbA,UAAa,CAAC3D,GAAD,EAAMgB,IAAN;AAAA,UAAe0C,aAAaH,YAAb,CAA0BvD,GAA1B,EAA+B,MAA/B,EAAuCgB,IAAvC,CAAf;AAAA,EAAnB;AACP;;;;;;;;;AASO,KAAM4C,oCAAc,SAAdA,WAAc,CAAC5D,GAAD,EAAMgB,IAAN;AAAA,UAAe0C,aAAaH,YAAb,CAA0BvD,GAA1B,EAA+B,OAA/B,EAAwCgB,IAAxC,CAAf;AAAA,EAApB,C;;;;;;AClpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"swarm-numberformat.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"numberformat\"] = factory();\n\telse\n\t\troot[\"numberformat\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f5a8285f5b5e7b10d6f7\n **/","// Can't comment a .json file, but the suffixes come from these pages:\n// http://home.kpn.nl/vanadovv/BignumbyN.html\nimport standardSuffixes from './standard-suffixes.json'\nimport longScaleSuffixes from './long-scale-suffixes.json'\n// TODO: use this page to generate names dynamically, for even larger numbers:\n//   http://mathforum.org/library/drmath/view/59154.html\n// TODO: rounding control\n\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new Error(message)\n  }\n  return condition\n}\n\nconst backends = {\n  'native': {\n    // Suffixes are a list - which index of the list do we want? \n    // _index(999) === 0\n    // _index(1000) === 1\n    // _index(1000000) === 2\n    index(val) {\n      // string length is faster but fails for length >= 20, where JS starts\n      // formatting with e\n      return Math.max(0, Math.floor(Math.log10(Math.abs(val))/3))\n    },\n    prefix(val, sigfigs, index) {\n      return (val / Math.pow(1000, index)).toPrecision(sigfigs)\n    },\n  },\n  'decimal.js': {\n    // Note that decimal.js is never imported by this library!\n    // We're using its methods passed in by the caller. This keeps the library\n    // much smaller for the common case: no decimal.js.\n    // api docs: https://mikemcl.github.io/decimal.js/\n    index(val) {\n      // we assume the *exponent* is small enough to be a native js number\n      return Math.max(0, val.abs().logarithm(10).dividedBy(3).floor().toNumber())\n    },\n    prefix(val, sigfigs, index) {\n      var div = new val.constructor(1000).pow(index)\n      return val.dividedBy(div).toPrecision(sigfigs)\n    },\n  },\n}\n\n// The formatting function.\nfunction _format(val, opts) {\n  const backend = validate(backends[opts.backend], `not a backend: ${opts.backend}`)\n  const index = backend.index(val)\n  const suffix = opts.suffixFn(index)\n  // opts.minSuffix: Use JS native formatting for smallish numbers, because\n  // '99,999' is prettier than '99.9k'\n  // it's safe to let Math coerce Decimal.js to infinity here, gt/lt still work\n  if (Math.abs(val) < opts.minSuffix) {\n    // decimal.js minSuffix/minRound aren't supported, we must be native to get here\n    if (Math.abs(val) >= opts.minRound) {\n      val = Math.floor(val)\n    }\n    return val.toLocaleString(undefined, {maximumSignificantDigits: opts.sigfigs})\n  }\n  // No suffix found: use scientific notation. JS's native toExponential is fine.\n  if (!suffix && suffix !== '') {\n    return val.toExponential(opts.sigfigs-1).replace('e+', 'e')\n  }\n  // Found a suffix. Calculate the prefix, the number before the suffix.\n  const prefix = backend.prefix(val, opts.sigfigs, index)\n  return `${prefix}${suffix}`\n}\n\nconst defaultOptions = {\n  backend: 'native',\n  flavor: 'full',\n  suffixGroup: 'full',\n  suffixFn(index) {\n    var suffixes = this.suffixes || this.suffixGroups[this.suffixGroup]\n    validate(suffixes, `no such suffixgroup: ${this.suffixGroup}`)\n    if (index < suffixes.length) {\n      return suffixes[index] || ''\n    }\n    // return undefined\n  },\n  // minimum value to use any suffix, because '99,900' is prettier than '99.9k'\n  minSuffix: 1e5,\n  // Show decimals below this value rounded to opts.sigfigs, instead of floor()ed\n  minRound: 0,\n  sigfigs: 3, // often overridden by flavor\n  format: 'standard'\n}\n// User-visible format choices, like on swarmsim's options screen. \n// Each has a different set of options.\nconst Formats = {\n  standard: {suffixGroups: standardSuffixes},\n  // like standard formatting, with a different set of suffixes\n  longScale: {suffixGroups: longScaleSuffixes},\n  // like standard formatting, with no suffixes at all\n  scientific: {suffixGroups: {full: [], short: []}},\n  // like standard formatting, with a smaller set of suffixes\n  hybrid: {\n    suffixGroups: {\n      full: standardSuffixes.full.slice(0, 12),\n      short: standardSuffixes.short.slice(0, 12),\n    },\n  },\n  // like standard formatting, with a different/infinite set of suffixes\n  engineering: {suffixFn: index => index === 0 ? '' : `E${index*3}`},\n}\n// A convenient way for the developer to modify formatters.\n// These are different from formats - not user-visible.\nconst Flavors = {\n  full: {suffixGroup: 'full', sigfigs: 5},\n  short: {suffixGroup: 'short', sigfigs: 3},\n}\n// Allow callers to extend formats and flavors.\ndefaultOptions.formats = Formats\ndefaultOptions.flavors = Flavors\n\nexport class Formatter {\n  /**\n   * @param {Object} opts All formatter configuration.\n   * @param {string} [opts.flavor='full'] 'full' or 'short'. Flavors can modify any number of other options here. Full is the default; short has fewer sigfigs and shorter standard-suffixes.\n   * @param {Object} [opts.flavors] Specify your own custom flavors. \n   * @param {string} [opts.backend='native'] 'native' or 'decimal.js'.\n   * @param {string} [opts.suffixGroup]\n   * @param {Function} [opts.suffixFn]\n   * @param {number} [opts.minSuffix=1e5]\n   * @param {number} [opts.minRound=0]\n   * @param {number} [opts.sigfigs=5]\n   * @param {number} [opts.format='standard'] 'standard', 'hybrid', 'scientific', 'longScale'.\n   * @param {Object} [opts.formats] Specify your own custom formats.\n   */\n  constructor(opts = {}) {\n    /** @type Object */\n    this.opts = opts\n    // create convenience methods for each flavor\n    var flavors = Object.keys(this._normalizeOpts().flavors)\n    // the fn(i) is for stupid binding tricks with the looped fn(val, opts)\n    for (var i=0; i < flavors.length; i++) (i => {\n      var flavor = flavors[i]\n      // capitalize the first letter to camel-case method name, like formatShort\n      var key = 'format' + flavor.charAt(0).toUpperCase() + flavor.substr(1)\n      /** @ignore */\n      this[key] = (val, opts) => this.formatFlavor(val, flavor, opts)\n    })(i)\n  }\n  \n  _normalizeOpts(opts={}) {\n    // all the user-specified opts, no defaults\n    opts = Object.assign({}, this.opts, opts)\n    // opts.format redefines some other opts, but should never override the user's opts\n    var format = opts && opts.format\n    var formats = (opts && opts.formats) || defaultOptions.formats\n    var formatOptions = formats[format || defaultOptions.format]\n    validate(formatOptions, `no such format: ${format}`)\n    var flavor = opts && opts.flavor\n    var flavors = (opts && opts.flavors) || defaultOptions.flavors\n    var flavorOptions = flavors[flavor || defaultOptions.flavor]\n    validate(flavorOptions, `no such flavor: ${flavor}`)\n    // finally, add the implied options: defaults and format-derived\n    return Object.assign({}, defaultOptions, formatOptions, flavorOptions, opts)\n  }\n  /**\n   * @param {number} val\n   * @param {Object} [opts]\n   * @return {number} which suffix to use for this number in a list of suffixes. You can also think of this as \"how many commas are in the number?\"\n   */\n  index(val, opts) {\n    opts = this._normalizeOpts(opts)\n    return backends[opts.backend].index(val)\n  }\n  /**\n   * @param {number} val\n   * @param {Object} [opts]\n   * @return {string} The suffix that this number would use, with no number shown.\n   * @example\n   * new Formatter().suffix(1e6)\n   * // => \" million\"\n   * @example\n   * new Formatter().suffix(1e6, {flavor: \"short\"})\n   * // => \"M\"\n   */\n  suffix(val, opts) {\n    opts = this._normalizeOpts(opts)\n    var index = backends[opts.backend].index(val)\n    return opts.suffixFn(index)\n  }\n  /**\n   * Format a number.\n   * @param {number} val\n   * @param {Object} [opts] Override the options provided to the Formatter constructor.\n   * @return {string} The formatted number.\n   * @example\n   * new Formatter().format(1e6)\n   * // => \"1.0000 million\"\n   */\n  format(val, opts) {\n    opts = this._normalizeOpts(opts)\n    return _format(val, opts)\n  }\n  /**\n   * Format a number with a specified flavor. It's very common to call the formatter with different flavors, so it has its own shortcut.\n   *\n   * `Formatter.formatFull()` and `Formatter.formatShort()` are also available.\n   * @param {number} val\n   * @param {string} flavor 'short' or 'full'. See opts.flavor.\n   * @param {Object} [opts]\n   * @return {string[]} The complete list of formats available. Use this to build an options UI to allow your players to choose their favorite format.\n   */\n  formatFlavor(val, flavor, opts) {\n    return this.format(val, Object.assign({}, opts, {flavor}))\n  }\n  /**\n   * @param {Object} [opts]\n   * @return {string[]} The complete list of formats available. Use this to build an options UI to allow your players to choose their favorite format.\n   */\n  listFormats(opts) {\n    opts = this._normalizeOpts(opts)\n    return Object.keys(opts.formats)\n  }\n}\n\nconst numberformat = new Formatter()\nnumberformat.defaultOptions = defaultOptions\nnumberformat.Formatter = Formatter\nexport default numberformat\n\n/**\n * Format a number using the default options.\n * @param {number} val\n * @param {Object} [opts]\n * @return string\n * @example\n * format(1e6)\n * // => \"1.0000 million\"\n * @example\n * format(1e6, {sigfigs: 1})\n * // => \"1 million\"\n */\nexport const format = (val, opts) => numberformat.format(val, opts)\n/**\n * Format a full-flavor number using the default options. Identical to `format()`\n * @param {number} val\n * @param {Object} [opts]\n * @return string\n * @example\n * format(1e6)\n * // => \"1.0000 million\"\n */\nexport const formatFull = (val, opts) => numberformat.formatFlavor(val, 'full', opts)\n/**\n * Format a short-flavor number using the default options.\n * @param {number} val\n * @param {Object} [opts]\n * @return string\n * @example\n * format(1e6)\n * // => \"1.00M\"\n */\nexport const formatShort = (val, opts) => numberformat.formatFlavor(val, 'short', opts)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","module.exports = {\n\t\"short\": [\n\t\t\"\",\n\t\t\"K\",\n\t\t\"M\",\n\t\t\"B\",\n\t\t\"T\",\n\t\t\"Qa\",\n\t\t\"Qi\",\n\t\t\"Sx\",\n\t\t\"Sp\",\n\t\t\"Oc\",\n\t\t\"No\",\n\t\t\"Dc\",\n\t\t\"UDc\",\n\t\t\"DDc\",\n\t\t\"TDc\",\n\t\t\"QaDc\",\n\t\t\"QiDc\",\n\t\t\"SxDc\",\n\t\t\"SpDc\",\n\t\t\"ODc\",\n\t\t\"NDc\",\n\t\t\"Vi\",\n\t\t\"UVi\",\n\t\t\"DVi\",\n\t\t\"TVi\",\n\t\t\"QaVi\",\n\t\t\"QiVi\",\n\t\t\"SxVi\",\n\t\t\"SpVi\",\n\t\t\"OVi\",\n\t\t\"NVi\",\n\t\t\"Tg\",\n\t\t\"UTg\",\n\t\t\"DTg\",\n\t\t\"TTg\",\n\t\t\"QaTg\",\n\t\t\"QiTg\",\n\t\t\"SxTg\",\n\t\t\"SpTg\",\n\t\t\"OTg\",\n\t\t\"NTg\",\n\t\t\"Qd\",\n\t\t\"UQd\",\n\t\t\"DQd\",\n\t\t\"TQd\",\n\t\t\"QaQd\",\n\t\t\"QiQd\",\n\t\t\"SxQd\",\n\t\t\"SpQd\",\n\t\t\"OQd\",\n\t\t\"NQd\",\n\t\t\"Qq\",\n\t\t\"UQq\",\n\t\t\"DQq\",\n\t\t\"TQq\",\n\t\t\"QaQq\",\n\t\t\"QiQq\",\n\t\t\"SxQq\",\n\t\t\"SpQq\",\n\t\t\"OQq\",\n\t\t\"NQq\",\n\t\t\"Sg\",\n\t\t\"USg\",\n\t\t\"DSg\",\n\t\t\"TSg\",\n\t\t\"QaSg\",\n\t\t\"QiSg\",\n\t\t\"SxSg\",\n\t\t\"SpSg\",\n\t\t\"OSg\",\n\t\t\"NSg\",\n\t\t\"St\",\n\t\t\"USt\",\n\t\t\"DSt\",\n\t\t\"TSt\",\n\t\t\"QaSt\",\n\t\t\"QiSt\",\n\t\t\"SxSt\",\n\t\t\"SpSt\",\n\t\t\"OSt\",\n\t\t\"NSt\",\n\t\t\"Og\",\n\t\t\"UOg\",\n\t\t\"DOg\",\n\t\t\"TOg\",\n\t\t\"QaOg\",\n\t\t\"QiOg\",\n\t\t\"SxOg\",\n\t\t\"SpOg\",\n\t\t\"OOg\",\n\t\t\"NOg\"\n\t],\n\t\"full\": [\n\t\t\"\",\n\t\t\" thousand\",\n\t\t\" million\",\n\t\t\" billion\",\n\t\t\" trillion\",\n\t\t\" quadrillion\",\n\t\t\" quintillion\",\n\t\t\" sextillion\",\n\t\t\" septillion\",\n\t\t\" octillion\",\n\t\t\" nonillion\",\n\t\t\" decillion\",\n\t\t\" undecillion\",\n\t\t\" duodecillion\",\n\t\t\" tredecillion\",\n\t\t\" quattuordecillion\",\n\t\t\" quinquadecillion\",\n\t\t\" sedecillion\",\n\t\t\" septendecillion\",\n\t\t\" octodecillion\",\n\t\t\" novendecillion\",\n\t\t\" vigintillion\",\n\t\t\" unvigintillion\",\n\t\t\" duovigintillion\",\n\t\t\" tresvigintillion\",\n\t\t\" quattuorvigintillion\",\n\t\t\" quinquavigintillion\",\n\t\t\" sesvigintillion\",\n\t\t\" septemvigintillion\",\n\t\t\" octovigintillion\",\n\t\t\" novemvigintillion\",\n\t\t\" trigintillion\",\n\t\t\" untrigintillion\",\n\t\t\" duotrigintillion\",\n\t\t\" trestrigintillion\",\n\t\t\" quattuortrigintillion\",\n\t\t\" quinquatrigintillion\",\n\t\t\" sestrigintillion\",\n\t\t\" septentrigintillion\",\n\t\t\" octotrigintillion\",\n\t\t\" noventrigintillion\",\n\t\t\" quadragintillion\",\n\t\t\" unquadragintillion\",\n\t\t\" duoquadragintillion\",\n\t\t\" tresquadragintillion\",\n\t\t\" quattuorquadragintillion\",\n\t\t\" quinquaquadragintillion\",\n\t\t\" sesquadragintillion\",\n\t\t\" septenquadragintillion\",\n\t\t\" octoquadragintillion\",\n\t\t\" novenquadragintillion\",\n\t\t\" quinquagintillion\",\n\t\t\" unquinquagintillion\",\n\t\t\" duoquinquagintillion\",\n\t\t\" tresquinquagintillion\",\n\t\t\" quattuorquinquagintillion\",\n\t\t\" quinquaquinquagintillion\",\n\t\t\" sesquinquagintillion\",\n\t\t\" septenquinquagintillion\",\n\t\t\" octoquinquagintillion\",\n\t\t\" novenquinquagintillion\",\n\t\t\" sexagintillion\",\n\t\t\" unsexagintillion\",\n\t\t\" duosexagintillion\",\n\t\t\" tresexagintillion\",\n\t\t\" quattuorsexagintillion\",\n\t\t\" quinquasexagintillion\",\n\t\t\" sesexagintillion\",\n\t\t\" septensexagintillion\",\n\t\t\" octosexagintillion\",\n\t\t\" novensexagintillion\",\n\t\t\" septuagintillion\",\n\t\t\" unseptuagintillion\",\n\t\t\" duoseptuagintillion\",\n\t\t\" treseptuagintillion\",\n\t\t\" quattuorseptuagintillion\",\n\t\t\" quinquaseptuagintillion\",\n\t\t\" seseptuagintillion\",\n\t\t\" septenseptuagintillion\",\n\t\t\" octoseptuagintillion\",\n\t\t\" novenseptuagintillion\",\n\t\t\" octogintillion\",\n\t\t\" unoctogintillion\",\n\t\t\" duooctogintillion\"\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/standard-suffixes.json\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = {\n\t\"short\": [],\n\t\"full\": [\n\t\t\"\",\n\t\t\" thousand\",\n\t\t\" million\",\n\t\t\" milliard\",\n\t\t\" billion\",\n\t\t\" billiard\",\n\t\t\" trillion\",\n\t\t\" trilliard\",\n\t\t\" quadrillion\",\n\t\t\" quadrilliard\",\n\t\t\" quintillion\",\n\t\t\" quintilliard\",\n\t\t\" sextillion\",\n\t\t\" sextilliard\",\n\t\t\" septillion\",\n\t\t\" septilliard\",\n\t\t\" octillion\",\n\t\t\" octilliard\",\n\t\t\" nonillion\",\n\t\t\" nonilliard\",\n\t\t\" decillion\",\n\t\t\" decilliard\",\n\t\t\" undecillion\",\n\t\t\" undecilliard\",\n\t\t\" duodecillion\",\n\t\t\" duodecilliard\",\n\t\t\" tredecillion\",\n\t\t\" tredecilliard\",\n\t\t\" quattuordecillion\",\n\t\t\" quattuordecilliard\",\n\t\t\" quinquadecillion\",\n\t\t\" quinquadecilliard\",\n\t\t\" sedecillion\",\n\t\t\" sedecilliard\",\n\t\t\" septendecillion\",\n\t\t\" septendecilliard\",\n\t\t\" octodecillion\",\n\t\t\" octodecilliard\",\n\t\t\" novendecillion\",\n\t\t\" novendecilliard\",\n\t\t\" vigintillion\",\n\t\t\" vigintilliard\",\n\t\t\" unvigintillion\",\n\t\t\" unvigintilliard\",\n\t\t\" duovigintillion\",\n\t\t\" duovigintilliard\",\n\t\t\" tresvigintillion\",\n\t\t\" tresvigintilliard\",\n\t\t\" quattuorvigintillion\",\n\t\t\" quattuorvigintilliard\",\n\t\t\" quinquavigintillion\",\n\t\t\" quinquavigintilliard\",\n\t\t\" sesvigintillion\",\n\t\t\" sesvigintilliard\",\n\t\t\" septemvigintillion\",\n\t\t\" septemvigintilliard\",\n\t\t\" octovigintillion\",\n\t\t\" octovigintilliard\",\n\t\t\" novemvigintillion\",\n\t\t\" novemvigintilliard\",\n\t\t\" trigintillion\",\n\t\t\" trigintilliard\",\n\t\t\" untrigintillion\",\n\t\t\" untrigintilliard\",\n\t\t\" duotrigintillion\",\n\t\t\" duotrigintilliard\",\n\t\t\" trestrigintillion\",\n\t\t\" trestrigintilliard\",\n\t\t\" quattuortrigintillion\",\n\t\t\" quattuortrigintilliard\",\n\t\t\" quinquatrigintillion\",\n\t\t\" quinquatrigintilliard\",\n\t\t\" sestrigintillion\",\n\t\t\" sestrigintilliard\",\n\t\t\" septentrigintillion\",\n\t\t\" septentrigintilliard\",\n\t\t\" octotrigintillion\",\n\t\t\" octotrigintilliard\",\n\t\t\" noventrigintillion\",\n\t\t\" noventrigintilliard\",\n\t\t\" quadragintillion\",\n\t\t\" quadragintilliard\",\n\t\t\" unquadragintillion\",\n\t\t\" unquadragintilliard\"\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/long-scale-suffixes.json\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}